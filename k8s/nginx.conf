events {
    multi_accept        on;
    worker_connections  16384;
    use                 epoll;
}
 
http {
 
  # setup connection limit zone
  limit_conn_zone             $binary_remote_addr zone=caddr:1m;
 
 
  # setup request limit zone and set default rate to 50 requests per second
  limit_req_zone              $binary_remote_addr zone=raddr:1m rate=50r/s;
 
  # set a default value for $trace_id to insure that the variable is always considered declared
  map $status $trace_id {
    default "-";
  }
 
  # add x-trace-id at the end of the standard log file format
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  'X-trace-id="$trace_id"';
 
  # make sure we use the log format that we just defined
  access_log                /var/log/nginx/access.log main;
  error_log                 /var/log/nginx/error.log notice;
 
  server {
 
    listen                    443 ssl;
 
    # Configure the server to respond to any URL in the cluster
    server_name               *.dg-dev.svc.k8s.windstream.com;
 
    # THESE CERTIFICATE FILES MUST BE MOUNTED BY RANCHER / KUBERNETES
    ssl_certificate           /var/run/certificates/tls.crt;
    ssl_certificate_key       /var/run/certificates/tls.key;
 
    ssl_session_cache         builtin:1000  shared:SSL:10m;
    ssl_protocols             TLSv1.1  TLSv1.2;
    ssl_ciphers               HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;
 
    location / {
 
      # limit_conn will likely need to be customized per service.  I am defaulting it to 5 connections per client
      limit_conn caddr        5;
 
      # limit_req wll likely need to be customized per service.  I am defaulting it to 1 request per second with burst of 5 with no delay
      limit_req               zone=raddr burst=5 nodelay;
 
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_set_header Proxy  "";
      proxy_connect_timeout   60s;
      proxy_send_timeout      60s;
      proxy_read_timeout      60s;
      proxy_redirect          off;
      proxy_buffering         off;
      proxy_http_version      1.1;
 
      # if x-trace-id request header exists then use the value passed in from the client
      if ($http_x_trace_id) {
        set $trace_id "$http_x_trace_id";
      }
 
      # if x-trace-id request header is missing then use nginx request_id
      if ($http_x_trace_id = "") {
        set $trace_id "$request_id";
      }
 
      # always pass a x-trace-id request header, use passed in value if present, else use request_id
      proxy_set_header X-trace-id $trace_id;
 
      proxy_pass              http://localhost:8080;
 
    }
  }
  # default server, used for NGINX healthcheck and access to nginx stats
  server {
    # Use the port 18080 (random value just to avoid known ports) as default port for nginx.
    # Changing this value requires a change in:
    # https://github.com/kubernetes/contrib/blob/master/ingress/controllers/nginx/nginx/command.go#L104
    listen 18080 default_server reuseport backlog=511;
 
    location /healthz {
      access_log off;
      return 200;
    }
 
    location /nginx_status {
 
      access_log off;
      stub_status on;
    }
  }
}